{"version":3,"sources":["component/card/card.component.jsx","component/card-list/card-list.component.jsx","component/searchbox/searchbox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","Cardlist","monsters","map","Search","placeholder","handleChange","type","onChange","App","e","setState","search","target","value","state","fetch","then","res","json","data","filterdMonster","this","filter","mons","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAGaA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEL,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCPXC,G,MAAW,SAACR,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACN,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLdM,G,MAAS,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACpC,OACE,uBACEZ,UAAU,SACVa,KAAMF,EACNA,YAAY,iBACZG,SAAUF,MC4BDG,E,kDA/Bb,aAAe,IAAD,8BACZ,gBAYFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,OAAQF,EAAEG,OAAOC,SAZjC,EAAKC,MAAQ,CACXb,SAAU,GACVU,OAAQ,IAJE,E,qDAOd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAU,EAAKT,SAAS,CAAET,SAAUkB,S,oBAO9C,WAAU,IAAD,OACDC,EAAiBC,KAAKP,MAAMb,SAASqB,QAAO,SAACC,GAAD,OAChDA,EAAKzB,KAAK0B,cAAcC,SAAS,EAAKX,MAAMH,OAAOa,kBAErD,OACE,sBAAK/B,UAAU,MAAf,UACE,gDACA,cAAC,EAAD,CAAQW,YAAY,iBAAiBC,aAAcgB,KAAKhB,eACxD,cAAC,EAAD,CAAUJ,SAAUmB,W,GA1BVM,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d9196e5e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./21.1 card.styles.css\";\r\n\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        alt=\"monster\"\r\n        src={`https://robohash.org/${props.monster.id}?set=set4&size=180x180`}\r\n      />\r\n      <h2>{props.monster.name}</h2>\r\n      <p>{props.monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Card } from \"../card/card.component\";\r\nimport \"./19.3 card-list.styles.css\";\r\n\r\nexport const Cardlist = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./28.1 search-box.styles.css\";\r\n\r\nexport const Search = ({ placeholder, handleChange }) => {\r\n  return (\r\n    <input\r\n      className=\"search\"\r\n      type={placeholder}\r\n      placeholder=\"search monster\"\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport { Cardlist } from \"./component/card-list/card-list.component\";\nimport { Search } from \"./component/searchbox/searchbox.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      search: \"\",\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((data) => this.setState({ monsters: data }));\n  }\n\n  handleChange = (e) => {\n    this.setState({ search: e.target.value });\n  };\n\n  render() {\n    const filterdMonster = this.state.monsters.filter((mons) =>\n      mons.name.toLowerCase().includes(this.state.search.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monster Roldex</h1>\n        <Search placeholder=\"search monster\" handleChange={this.handleChange} />\n        <Cardlist monsters={filterdMonster}></Cardlist>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}